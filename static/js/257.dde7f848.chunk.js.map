{"version":3,"file":"static/js/257.dde7f848.chunk.js","mappings":"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","sources":["API/api.js","components/SearchMovies/SearchMovies.styled.js","components/SearchMovies/SearchMovies.js","Pages/MoviesPage.js","components/Loader/Loader.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js"],"sourcesContent":["import axios from 'axios';\n\nexport const apiResults = (url, title) => {\n  return axios\n    .get(`https://api.themoviedb.org/3/${url}`, {\n      params: { language: 'en-US', query: title },\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyM2FkNGFkNWM2Mzg1ZmYzYjZlZThlN2NkYzFmNWVhOCIsInN1YiI6IjY0ZjRkMzZjOWU0NTg2MDEzYWY5MmExOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.gw-4nvIFz2mahV7u6nEjviVxuuefwHpWagfQWIKcjSI',\n      },\n    })\n    .then(response => response.data);\n};\n","import styled from 'styled-components';\n\nexport const SearchInput = styled.input`\n  padding: 10px;\n  width: 100%;\n  max-width: 300px;\n  border: 2px solid #007bff;\n  border-radius: 5px;\n  outline: none;\n  font-size: 16px;\n`;\n\nexport const SearchBtn = styled.button`\n  padding: 10px 20px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n  margin-left: 10px;\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 20px 0;\n`;\n","import { SearchBtn, SearchForm, SearchInput } from './SearchMovies.styled';\nimport { useState } from 'react';\n\nexport const SearchMovies = ({ searchMovie }) => {\n  const [title, setTitle] = useState('');\n  const addTitleState = e => {\n    setTitle(e.target.value);\n  };\n\n  const onSearchMovies = e => {\n    e.preventDefault();\n    if (title.trim() === '') {\n      return;\n    }\n    searchMovie(title);\n  };\n\n  return (\n    <SearchForm onSubmit={onSearchMovies}>\n      <SearchInput\n        type=\"text\"\n        placeholder=\"Search for movies...\"\n        onChange={addTitleState}\n      />\n      <SearchBtn>Search</SearchBtn>\n    </SearchForm>\n  );\n};\n","import { SearchMovies } from 'components/SearchMovies/SearchMovies';\nimport { Loader } from 'components/Loader/Loader';\nimport { apiResults } from '../API/api';\n\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst MoviesPage = () => {\n  const [resultsSearch, setResultsSearch] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    apiResults('search/movie', query)\n      .then(res => {\n        setResultsSearch(res.results);\n      })\n      .catch(err => console.log(err))\n      .finally(() => setIsLoading(false));\n  }, [query]);\n\n  const searchMovie = query => {\n    setSearchParams({ query });\n  };\n  return (\n    <>\n      <SearchMovies searchMovie={searchMovie} />\n      {isLoading && <Loader />}\n      {resultsSearch && <MoviesList list={resultsSearch} />}\n    </>\n  );\n};\nexport default MoviesPage;\n","import { Grid } from 'react-loader-spinner';\n// import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport const Loader = () => {\n  return (\n    <>\n      <Grid\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        wrapperStyle={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesListStyled = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport const MoviesListItem = styled.li`\n  margin: 0 10px 20px;\n  text-align: center;\n  background-color: #f5f5f5;\n  border-radius: 5px;\n  padding: 10px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: translateY(-5px);\n    background-color: #add8e6;\n  }\n`;\n\nexport const MoviesListItemLink = styled(Link)`\n  text-decoration: none;\n  color: #333;\n  font-weight: bold;\n  font-size: 16px;\n  display: block;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MoviesListItem,\n  MoviesListItemLink,\n  MoviesListStyled,\n} from './MoviesList.styled';\n\nexport const MoviesList = ({ list }) => {\n  const location = useLocation();\n  return (\n    <MoviesListStyled>\n      {list.map(({ id, title, name }) => {\n        return (\n          <MoviesListItem key={id}>\n            <MoviesListItemLink to={`/movies/${id}`} state={{ from: location }}>\n              {name ?? title}\n            </MoviesListItemLink>\n          </MoviesListItem>\n        );\n      })}\n    </MoviesListStyled>\n  );\n};\n"],"names":["apiResults","url","title","axios","concat","params","language","query","headers","accept","Authorization","then","response","data","SearchInput","styled","_templateObject","_taggedTemplateLiteral","SearchBtn","_templateObject2","SearchForm","_templateObject3","SearchMovies","_ref","searchMovie","_useState","useState","_useState2","_slicedToArray","setTitle","_jsxs","onSubmit","e","preventDefault","trim","children","_jsx","type","placeholder","onChange","target","value","resultsSearch","setResultsSearch","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","_useState4","isLoading","setIsLoading","get","useEffect","res","results","catch","err","console","log","finally","_Fragment","Loader","MoviesList","list","Grid","color","height","width","wrapperStyle","position","top","left","transform","MoviesListStyled","MoviesListItem","MoviesListItemLink","Link","location","useLocation","map","_ref2","id","name","to","state","from"],"sourceRoot":""}