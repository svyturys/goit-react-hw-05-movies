{"version":3,"file":"static/js/806.db03307a.chunk.js","mappings":"kLAEaA,EAAa,SAACC,EAAKC,GAC9B,OAAOC,EAAAA,EAAAA,IACA,gCAADC,OAAiCH,GAAO,CAC1CI,OAAQ,CAAEC,SAAU,QAASC,MAAOL,GACpCM,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAGLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAI,GACnC,C,4ECVaC,EAAS,WACpB,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CACHC,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,aAAc,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,4BAKrB,C,gJCjBaC,EAAcC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kIASvBC,EAAkBH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yGAa3BG,GANSL,EAAAA,GAAAA,EAAQM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,4EAMNF,EAAAA,GAAAA,EAAQO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,6C,mCClBnBM,EAAU,WACrB,IAAAC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAEtBG,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,IACb9C,EAAAA,EAAAA,GAAW,SAADI,OAAU2C,EAAO,aACxBpC,MAAK,SAAAuC,GAAA,IAAGC,EAAOD,EAAPC,QAAO,OAAOT,EAAWS,EAAQ,IACzCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAI,IAC7BG,SAAQ,kBAAMV,GAAa,EAAM,GACtC,GAAG,CAACC,KAGFU,EAAAA,EAAAA,MAAAzC,EAAAA,SAAA,CAAAC,SAAA,CACG4B,IAAa9B,EAAAA,EAAAA,KAACD,EAAAA,EAAM,KACrBC,EAAAA,EAAAA,KAACY,EAAW,CAAAV,SACU,IAAnBwB,EAAQiB,QACP3C,EAAAA,EAAAA,KAACkB,EAAQ,CAAAhB,SAAC,6CAEVwB,EAAQkB,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAAO,OAChCN,EAAAA,EAAAA,MAAC1B,EAAe,CAAAd,SAAA,CACb6C,GACD/C,EAAAA,EAAAA,KAACkB,EAAQ,CAAAhB,SAAE8C,MAFSF,EAGJ,QAM9B,EACA,G","sources":["API/api.js","components/Loader/Loader.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\nexport const apiResults = (url, title) => {\n  return axios\n    .get(`https://api.themoviedb.org/3/${url}`, {\n      params: { language: 'en-US', query: title },\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyM2FkNGFkNWM2Mzg1ZmYzYjZlZThlN2NkYzFmNWVhOCIsInN1YiI6IjY0ZjRkMzZjOWU0NTg2MDEzYWY5MmExOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.gw-4nvIFz2mahV7u6nEjviVxuuefwHpWagfQWIKcjSI',\n      },\n    })\n    .then(response => response.data);\n};\n","import { Grid } from 'react-loader-spinner';\n// import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport const Loader = () => {\n  return (\n    <>\n      <Grid\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        wrapperStyle={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ListReviews = styled.ul`\n  list-style: none;\n  padding: 0;\n  max-width: 1200px;\n  margin: 0 auto;\n  overflow-y: auto;\n  max-height: 400px;\n`;\n\nexport const ItemListReviews = styled.li`\n  margin-bottom: 20px;\n  padding: 20px;\n  background-color: #f5f5f5;\n  border-radius: 5px;\n`;\n\nexport const Author = styled.p`\n  font-size: 18px;\n  font-weight: bold;\n  margin-bottom: 10px;\n`;\n\nexport const ItemText = styled.p`\n  font-size: 16px;\n  margin: 0;\n`;\n","import { useEffect, useState } from 'react';\nimport { ItemListReviews, ItemText, ListReviews } from './Reviews.styled';\nimport { apiResults } from '../../API/api';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    apiResults(`movie/${movieId}/reviews`)\n      .then(({ results }) => setReviews(results))\n      .catch(err => console.log(err))\n      .finally(() => setIsLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <ListReviews>\n        {reviews.length === 0 ? (\n          <ItemText>We don't have any reviews for this movie</ItemText>\n        ) : (\n          reviews.map(({ id, author, content }) => (\n            <ItemListReviews key={id}>\n              {author}\n              <ItemText>{content}</ItemText>\n            </ItemListReviews>\n          ))\n        )}\n      </ListReviews>\n    </>\n  );\n};\nexport default Reviews;\n"],"names":["apiResults","url","title","axios","concat","params","language","query","headers","accept","Authorization","then","response","data","Loader","_jsx","_Fragment","children","Grid","color","height","width","wrapperStyle","position","top","left","transform","ListReviews","styled","_templateObject","_taggedTemplateLiteral","ItemListReviews","_templateObject2","ItemText","_templateObject3","_templateObject4","Reviews","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","isLoading","setIsLoading","movieId","useParams","useEffect","_ref","results","catch","err","console","log","finally","_jsxs","length","map","_ref2","id","author","content"],"sourceRoot":""}