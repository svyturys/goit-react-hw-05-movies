{"version":3,"file":"static/js/327.b096eab7.chunk.js","mappings":"kLAEaA,EAAa,SAACC,EAAKC,GAC9B,OAAOC,EAAAA,EAAAA,IACA,gCAADC,OAAiCH,GAAO,CAC1CI,OAAQ,CAAEC,SAAU,QAASC,MAAOL,GACpCM,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAGLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAI,GACnC,C,6HCVaC,EAAQC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6F,GAOPF,EAAAA,GAAAA,GAASG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,gHAQLF,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,wSAeLF,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,iHAQXF,EAAAA,GAAAA,IAAUO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,2I,kCCnC7BM,EAAW,WACtB,IAAAC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAc9B,OAZAG,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACbjC,EAAAA,EAAAA,GAAW,sBACRW,MAAK,SAAAwB,GACJN,EAAWM,EAAIC,QACjB,IACCC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACd,IACCG,SAAQ,kBAAMR,GAAa,EAAM,GACtC,GAAG,KAGDS,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC/B,EAAK,CAAA8B,SAAC,mBACNZ,GAAYa,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KAAMD,EAAAA,EAAAA,KAACE,EAAAA,EAAU,CAACC,KAAMpB,MAGlD,ECvBA,EAHiB,WACf,OAAOiB,EAAAA,EAAAA,KAACtB,EAAQ,GAClB,C,4ECDauB,EAAS,WACpB,OACED,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CACHC,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,aAAc,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,4BAKrB,C,mGChBaC,EAAmB3C,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gHAQ5B0C,EAAiB5C,EAAAA,GAAAA,GAASG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,uSAe1B2C,GAAqB7C,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iH,SCnBjC8B,EAAa,SAAHc,GAAkB,IAAZb,EAAIa,EAAJb,KACrBc,GAAWC,EAAAA,EAAAA,MACjB,OACElB,EAAAA,EAAAA,KAACa,EAAgB,CAAAd,SACdI,EAAKgB,KAAI,SAAAC,GAA0B,IAAvBC,EAAED,EAAFC,GAAIhE,EAAK+D,EAAL/D,MAAOiE,EAAIF,EAAJE,KACtB,OACEtB,EAAAA,EAAAA,KAACc,EAAc,CAAAf,UACbC,EAAAA,EAAAA,KAACe,EAAkB,CAACQ,GAAE,WAAAhE,OAAa8D,GAAMG,MAAO,CAAEC,KAAMR,GAAWlB,SAC5D,OAAJuB,QAAI,IAAJA,EAAAA,EAAQjE,KAFQgE,EAMzB,KAGN,C","sources":["API/api.js","components/TopToday/TopTodayStyled.js","components/TopToday/TopToday.js","Pages/HomePage.js","components/Loader/Loader.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js"],"sourcesContent":["import axios from 'axios';\n\nexport const apiResults = (url, title) => {\n  return axios\n    .get(`https://api.themoviedb.org/3/${url}`, {\n      params: { language: 'en-US', query: title },\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyM2FkNGFkNWM2Mzg1ZmYzYjZlZThlN2NkYzFmNWVhOCIsInN1YiI6IjY0ZjRkMzZjOWU0NTg2MDEzYWY5MmExOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.gw-4nvIFz2mahV7u6nEjviVxuuefwHpWagfQWIKcjSI',\n      },\n    })\n    .then(response => response.data);\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Title = styled.h1`\n  text-align: center;\n  margin-bottom: 20px;\n  font-size: 24px;\n  color: #333;\n`;\n\nexport const TopList = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport const TopListItem = styled.li`\n  margin: 0 10px 20px;\n  text-align: center;\n  background-color: #f5f5f5;\n  border-radius: 5px;\n  padding: 10px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: translateY(-5px);\n    background-color: #add8e6;\n  }\n`;\n\nexport const TopListItemLink = styled(Link)`\n  text-decoration: none;\n  color: #333;\n  font-weight: bold;\n  font-size: 16px;\n  display: block;\n`;\n\nexport const TopListItemImage = styled.img`\n  max-width: 100%;\n  height: auto;\n  margin-bottom: 10px;\n  border-radius: 5px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n","import { useEffect, useState } from 'react';\nimport { Title } from './TopTodayStyled';\nimport { apiResults } from '../../API/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nexport const TopToday = () => {\n  const [topList, setTopList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    apiResults('trending/movie/day')\n      .then(res => {\n        setTopList(res.results);\n      })\n      .catch(err => {\n        console.log(err);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <Title>Trending today</Title>\n      {isLoading ? <Loader /> : <MoviesList list={topList} />}\n    </>\n  );\n};\n","import { TopToday } from 'components/TopToday/TopToday';\n\nconst HomePage = () => {\n  return <TopToday />;\n};\nexport default HomePage;\n","import { Grid } from 'react-loader-spinner';\n// import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport const Loader = () => {\n  return (\n    <>\n      <Grid\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        wrapperStyle={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesListStyled = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport const MoviesListItem = styled.li`\n  margin: 0 10px 20px;\n  text-align: center;\n  background-color: #f5f5f5;\n  border-radius: 5px;\n  padding: 10px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: translateY(-5px);\n    background-color: #add8e6;\n  }\n`;\n\nexport const MoviesListItemLink = styled(Link)`\n  text-decoration: none;\n  color: #333;\n  font-weight: bold;\n  font-size: 16px;\n  display: block;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MoviesListItem,\n  MoviesListItemLink,\n  MoviesListStyled,\n} from './MoviesList.styled';\n\nexport const MoviesList = ({ list }) => {\n  const location = useLocation();\n  return (\n    <MoviesListStyled>\n      {list.map(({ id, title, name }) => {\n        return (\n          <MoviesListItem key={id}>\n            <MoviesListItemLink to={`/movies/${id}`} state={{ from: location }}>\n              {name ?? title}\n            </MoviesListItemLink>\n          </MoviesListItem>\n        );\n      })}\n    </MoviesListStyled>\n  );\n};\n"],"names":["apiResults","url","title","axios","concat","params","language","query","headers","accept","Authorization","then","response","data","Title","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","Link","_templateObject4","_templateObject5","TopToday","_useState","useState","_useState2","_slicedToArray","topList","setTopList","_useState3","_useState4","isLoading","setIsLoading","useEffect","res","results","catch","err","console","log","finally","_jsxs","_Fragment","children","_jsx","Loader","MoviesList","list","Grid","color","height","width","wrapperStyle","position","top","left","transform","MoviesListStyled","MoviesListItem","MoviesListItemLink","_ref","location","useLocation","map","_ref2","id","name","to","state","from"],"sourceRoot":""}